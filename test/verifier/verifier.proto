syntax = "proto2";
package verifier;

message Landmark {
    repeated sint32 x = 1 [packed = true];
    repeated sint32 y = 2 [packed = true];
}

message Feature {
    repeated float x = 1;
}

message Image {
    required bytes image = 1;
    optional sint32 rows = 2;
    optional sint32 cols = 3;
    optional sint32 DataLen = 4;
}

enum Format {
    MAT = 0;
    RGB = 1;
    YUV = 2;
    JPEG = 3;
}

// 注册人员
message RegisterReq {
    required int32 interface = 1;
    required string apiKey = 2;
    optional string requestId = 3;

    message Person {
        repeated Image images = 1;
        repeated Landmark landmarks = 2;
        required sint32 faceId = 3;
        required string groupId = 4 [default = "watchlist"];
    }
    repeated Person people = 4;
    required Format format = 5 [default = YUV];
}

message RegisterRes {
    required string requestId = 1;
    required sint32 timeUsed = 2;
    required sint32 errorMessage = 3;

    message FailedInfo {
        required sint32 faceId = 1;
        required string groupId = 2;
        required sint32 message = 3;
    }
    repeated FailedInfo failed = 4;
}

// 搜索人员
message SearchReq {
    required int32 interface = 1;
    required string apiKey = 2;
    optional string requestId = 3;
    repeated Image images = 4;
    required Format format = 5 [default = YUV];
    repeated Landmark landmarks = 6;
    required string groupId = 7 [default = "watchlist"];
    required int32 topk = 8;
    required float score = 9 [default = 0.8];
    optional string field = 10;
    optional Feature feature = 11;
}

message SearchRes {
    required string requestId = 1;
    required sint32 timeUsed = 2;
    required sint32 errorMessage = 3;

    repeated sint32 faceIds = 4;
    repeated float score = 5;
}

// 删除人员
message DeleteReq {
    required int32 interface = 1;
    required string apiKey = 2;
    optional string requestId = 3;
    required sint32 faceId = 4;
    required string groupId = 5 [default = "watchlist"];
    optional string field = 6;
}

message DeleteRes {
    required string requestId = 1;
    required sint32 timeUsed = 2;
    required sint32 errorMessage = 3;
}

// 比较人脸
message CompareReq {
    required int32 interface = 1;
    required string apiKey = 2;
    optional string requestId = 3;
    repeated Image images = 4;
    required Format format = 5 [default = YUV];
    repeated Landmark landmarks = 6;
}

message CompareRes {
    required string requestId = 1;
    required sint32 timeUsed = 2;
    required sint32 errorMessage = 3;
    optional float score = 4;
}

// 检测人脸
message DetectReq {
    required int32 interface = 1;
    required string apiKey = 2;
    optional string requestId = 3;
    required bytes image = 4;
    optional sint32 rows = 5;
    optional sint32 cols = 6;
    optional sint32 DataLen = 7;
    required Format format = 8 [default = YUV];
    optional sint32 minfaceSize = 9 [default = 80];
    optional sint32 maxfaceSize = 10 [default = 300];
    optional string field = 11 [default = "normal"];
    optional string imageId = 12;
    optional string cameraId = 13;
    optional string classify = 14;
}

message DetectRes {
    required string requestId = 1;
    required sint32 timeUsed = 2;
    required sint32 errorMessage = 3;
    optional sint32 detectNums = 4;
    optional sint32 trackNums = 5;

    message DetectInfo {
        required sint32 left = 1;
        required sint32 top = 2;
        required sint32 width = 3;
        required sint32 height = 4;
        required sint32 sideFace = 5;
        required sint32 quality = 6;
        required float score = 7;
        required sint32 glasses = 8;
        repeated sint32 x = 9 [packed = true];
        repeated sint32 y = 10 [packed = true];
        optional float female = 11;
        optional float male = 12;
        optional sint32 age = 13;
        optional string hair = 14;
    }

    message TrackInfo {
        required sint32 left = 1;
        required sint32 top = 2;
        required sint32 width = 3;
        required sint32 height = 4;
        required sint32 sideFace = 5;
        required sint32 quality = 6;
        required float score = 7;
        required sint32 glasses = 8;
        repeated sint32 x = 9 [packed = true];
        repeated sint32 y = 10 [packed = true];
        required string imageId = 11;
        required fixed64 inTime = 12;
        required fixed64 outTIme = 13;
        required fixed64 bestTIme = 14;
    }

    repeated DetectInfo detect = 6;
    repeated TrackInfo track = 7;
}

// 提取特征
message FeatureReq {
    required int32 interface = 1;
    required string apiKey = 2;
    optional string requestId = 3;
    repeated Image images = 4;
    required Format format = 5 [default = YUV];
    repeated Landmark landmarks = 6;
}

message FeatureRes {
    required string requestId = 1;
    required sint32 timeUsed = 2;
    required sint32 errorMessage = 3;
    optional sint32 dimension = 4;
    message FeatureInfo {
        repeated float x = 1;
    }
    repeated FeatureInfo feature = 5;
}

// 预测性别
message GenderReq {
    required int32 interface = 1;
    required string apiKey = 2;
    optional string requestId = 3;
    repeated Image images = 4;
    required Format format = 5 [default = YUV];
}

message GenderRes {
    required string requestId = 1;
    required sint32 timeUsed = 2;
    required sint32 errorMessage = 3;

    message Gender {
        required float Female = 1;
        required float Male = 2;
    }
    repeated Gender gender = 4;
}

// 预测年龄
message AgeReq {
    required int32 interface = 1;
    required string apiKey = 2;
    optional string requestId = 3;
    repeated Image images = 4;
    required Format format = 5 [default = YUV];
}

message AgeRes {
    required string requestId = 1;
    required sint32 timeUsed = 2;
    required sint32 errorMessage = 3;

    repeated string age = 4;
}

// 活体检测
message AliveReq {
    required int32 interface = 1;
    required string apiKey = 2;
    optional string requestId = 3;

    message LiveMeta {
        required string type = 1;
        required Image image1 = 2;
        required Image image2 = 3;
    }
    repeated LiveMeta live = 4;
    required Format format = 5 [default = YUV];
}

message AliveRes {
    required string requestId = 1;
    required sint32 timeUsed = 2;
    required sint32 errorMessage = 3;

    optional string lives = 4;
}

// 行人检测
message PedestrianReq {
    required int32 interface = 1;
    required string apiKey = 2;
    optional string requestId = 3;
    required Image image = 4;
    required Format format = 5 [default = YUV];
}

message PedestrianRes {
    required string requestId = 1;
    required sint32 timeUsed = 2;
    required sint32 errorMessage = 3;
    optional sint32 personNums = 4;

    message Location {
        required sint32 height = 1;
        required sint32 left = 2;
        required sint32 top = 3;
        required sint32 width = 4;
    }
    repeated Location locations = 5;
}

// 预测发型
message HairReq {
    required int32 interface = 1;
    required string apiKey = 2;
    optional string requestId = 3;
    repeated Image images = 4;
    required Format format = 5 [default = YUV];
}

message HairRes {
    required string requestId = 1;
    required sint32 timeUsed = 2;
    required sint32 errorMessage = 3;

    repeated string hair = 4;
}

// 查询注册库信息
message RepoInfoReq {
    required int32 interface = 1;
    required string apiKey = 2;
    optional string requestId = 3;
    optional string groupId = 4;
}

message RepoInfoRes {
    required string requestId = 1;
    required sint32 timeUsed = 2;
    required sint32 errorMessage = 3;
    optional string groupId = 4;
    optional sint32 regNums = 5;
}